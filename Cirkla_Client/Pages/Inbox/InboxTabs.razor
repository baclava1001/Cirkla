@* This component will later be refactored into a tab component *@

<ul class="nav">
    <li class="nav-item">
        <a class="nav-link" @onclick='() => ShowChildComponent("InboxIncoming")'>Incoming request (@numberOfIncoming)</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" @onclick='() => ShowChildComponent("MyPendingRequests")'>My pending requests (@numberOfPending)</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" @onclick='() => ShowChildComponent("MyAnsweredRequests")'>My answered requests (@numberOfAnswered)</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" @onclick='() => ShowChildComponent("ContractHistory")'>Contract history</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" @onclick='() => ShowChildComponent("MyRequestHistory")'>My request history</a>
    </li>
</ul>

@if (selectedChild == "InboxIncoming")
{
    <InboxIncoming OnNumberOfRequestsChanged="HandleIncomingChanged" />
}
else if (selectedChild == "MyPendingRequests")
{
    <InboxMyPendingRequests OnNumberOfPendingChanged="HandlePendingChanged" />
}
else if (selectedChild == "ContractHistory")
{
    <InboxContractHistory />
}




@code {
    private string selectedChild = "InboxIncoming";
    private int numberOfIncoming;
    private int numberOfPending;
    private int numberOfAnswered;

    private void ShowChildComponent(string child)
    {
        selectedChild = child;
    }

    private void HandleIncomingChanged(int value)
    {
            numberOfIncoming = value;
    }

    private void HandlePendingChanged(int value)
    {
        numberOfPending = value;
    }
}