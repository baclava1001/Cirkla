@attribute [Authorize]
@page "/circles"
@using Cirkla_Client.Pages.CirclesHandling.Components;
@inject IClient Client;
@inject SnackbarService SnackbarService;

<PageTitle>Circles overview</PageTitle>

<MudGrid Class="mb-5">
    <MudItem>
        <h3>Circles overview</h3>
    </MudItem>
    <MudItem>
        <MudButton
            id="Add"
            ButtonType="ButtonType.Button"
            Color="Color.Tertiary"
            Variant="Variant.Filled"
            StartIcon="@Icons.Material.Filled.Add"
            Href="/circles/create">New Circle</MudButton>
    </MudItem>
    <MudItem>
        <MudButton
            id="Find"
            ButtonType="ButtonType.Button"
            Color="Color.Tertiary"
            Variant="Variant.Filled"
            StartIcon="@Icons.Material.Filled.Search"
            Href="">Find circle</MudButton>
    </MudItem>
</MudGrid>


<MudGrid Class="d-flex flex-row">
    @if (Circles is null || Circles.Any() is false)
    {
        <MudItem>
            <MudText>No circles to show</MudText>
        </MudItem>
    }
    else
    {
        foreach (var circle in Circles)
        {
            if (circle is not null)
            {
                <MudItem>
                    <CircleCard Circle="circle" OnCircleDeleted="HandleCircleDeleted" />
                </MudItem>
            }
        }
    }
</MudGrid>

@code {
    public List<Circle>? Circles { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadCircles();
    }


    private async Task HandleCircleDeleted()
    {
        await LoadCircles();
        await InvokeAsync(StateHasChanged);
    }


    private async Task LoadCircles()
    {
        try
        {
            var result = await Client.GetAllCirclesAsync();
            if (result is null)
            {
                Console.WriteLine("No circles were retrieved.");
                return;
            }
            Circles = result.ToList();
        }
        catch (Exception ex)
        {
            SnackbarService.Error("Couldn't load any circles.");
            Console.WriteLine($"Something went wrong: {ex.Message}");
        }
    }
}
