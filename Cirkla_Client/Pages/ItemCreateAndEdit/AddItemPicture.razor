    <fieldset id="add-picture" disabled="@IsAddingPicture">
        <div class="row mb-3">
            <label for="item-picture-url" class="col-sm-2 col-form-label">Picture url </label>
            <div class="input-group w-25">
                <InputText id="item-picture-url" @bind-Value="ItemPicture.Url" class="form-control" placeholder="Enter full url" />
                <ValidationMessage For="() => ItemPicture.Url" class="text-danger" />
                <button class="btn btn-outline-primary" style="color:#fff; background-color:#186F65; border-color:#186F65" type="button" @onclick="@(() => AddPicture())">Add</button>
            </div>
        </div>
    </fieldset>


@code {
    [CascadingParameter]
    public ItemPicture? ItemPicture { get; set; }

    [Parameter]
    public EventCallback<ItemPicture> OnPictureAdded { get; set; }

    public bool IsAddingPicture { get; set; }

    private async Task AddPicture()
    {
        IsAddingPicture = true;
        if(!string.IsNullOrEmpty(ItemPicture.Url))
        {
            try
            {
                await OnPictureAdded.InvokeAsync(ItemPicture);
                await Task.Delay(500);
                ItemPicture.Url = string.Empty;
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
            finally
            {
                IsAddingPicture = false;
            }
        }
        IsAddingPicture = false;
    }
}
