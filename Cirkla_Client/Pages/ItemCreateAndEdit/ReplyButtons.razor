<TemplateColumn>
    <div class="d-flex justify-content-between">
        <button type="button" id="Deny" class="btn btn-danger me-1" @onclick='() => SendReplyToBorrower("Deny", context.Id)'><i class="fa-solid fa-xmark" /></button>
        <button type="button" id="Accept" class="btn btn-success me-1" @onclick='() => SendReplyToBorrower("Accept", context.Id)'><i class="fa-solid fa-check" /></button>
        <a href="/request/view?id=@context.Id" type="button" class="btn btn-secondary me-1"><i class="fa-solid fa-align-left" /></a>
    </div>
</TemplateColumn>


@code {
    private async Task SendReplyToBorrower(string buttonName, int contractId)
    {
        Contract contract = await _client.ApiBorrowingViewRequestAsync(contractId);

        // TODO: Move this block to mapper
        ContractReplyDTO contractReplyDTO = new()
            {
                Id = contract.Id,
                ItemId = contract.Item.Id,
                OwnerId = contract.Owner.Id,
                BorrowerId = contract.Borrower.Id,
                StartTime = contract.StartTime,
                EndTime = contract.EndTime,
                Created = contract.Created
            };

        try
        {
            if (buttonName == "Deny")
            {
                contractReplyDTO.DeniedByOwner = DateTime.Now;
            }
            else if (buttonName == "Accept")
            {
                contractReplyDTO.AcceptedByOwner = DateTime.Now;
            }
            await _client.ApiBorrowingRespondToRequestAsync(contractId, contractReplyDTO);

            tempMessage = $"You have responded {buttonName} to the request from {contract.Borrower.FirstName} {contract.Borrower.LastName}";
            messageClass = "text-success";
        }
        catch (Exception ex)
        {
            tempMessage = $"An error occurred: {ex.Message}";
            messageClass = "text-danger";
        }

        await OnRequestReply.InvokeAsync(contractReplyDTO);
    }
}