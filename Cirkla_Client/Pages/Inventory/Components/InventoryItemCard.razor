@inject NavigationManager NavigationManager;

<div class="col-12 col-sm-6 col-md-3 mb-4">
    <MudCard Elevation="2">
        <MudCardMedia Height="200" Image="@Item.Pictures?.FirstOrDefault()?.Url" alt="@AltText()"/>
        <MudCardContent>
            <MudText Typo="Typo.h5">@Item.Name</MudText>
            <MudText Typo="Typo.body2">@Item.Description</MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButton @onclick="NavigateToItemDetails" Variant="Variant.Text" Color="Color.Tertiary">More...</MudButton>
            <MudButton OnClick="() => NavigateToItemEdit()" Variant="Variant.Text" Color="Color.Default" StartIcon="@Icons.Material.Filled.Edit" />
            <MudButton OnClick="() => NavigateToItemEdit()" Variant="Variant.Text" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" />
        </MudCardActions>
    </MudCard>
</div>

@code {
    [Parameter]
    public Item Item { get; set; }

    private void NavigateToItemDetails()
    {
        var url = $"/itemdetails/?id={Item.Id}";
        NavigationManager.NavigateTo(url);
    }

    private void NavigateToItemEdit()
    {
        var url = $"/item/edit/?id={Item.Id}";
        NavigationManager.NavigateTo(url);
    }

    private async Task<string> AltText()
    {
        return $"Picture of {Item.Name}";
    }
}