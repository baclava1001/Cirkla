@using Cirkla.ApiClient;
@using SnackbarService = Cirkla_Client.Services.SnackbarService
@inject IClient Client;
@inject NavigationManager NavigationManager;
@inject SnackbarService SnackbarService;

<EditForm method="post" Model="User" OnValidSubmit="OnValidSubmit" >
    <DataAnnotationsValidator />
    <h3 class="mb-3 mt-lg-0 mt-sm-5">Signup</h3>
    <fieldset disabled="@_isSendingApiRequest" autocomplete="off">
        <div class="mb-4">
            <InputText placeholder="First name" id="firstname" autocomplete="off" @bind-Value="User.FirstName" class="form-control" />
            <ValidationMessage For="() => User.FirstName" class="text-danger" />
        </div>
        <div class="mb-4">
            <InputText placeholder="Last name" id="lastname" autocomplete="off" @bind-Value="User.LastName" class="form-control" />
            <ValidationMessage For="() => User.LastName" class="text-danger" />
        </div>
        <div class="mb-4">
            <InputText placeholder="E-mail" id="email" autocomplete="off" @bind-Value="User.Email" class="form-control" />
            <ValidationMessage For="() => User.Email" class="text-danger" />
        </div>
        <div class="mb-4">
            <InputText placeholder="Adress" id="address" autocomplete="off" @bind-Value="User.Address" class="form-control" />
            <ValidationMessage For="() => User.Address" class="text-danger" />
        </div>
        <div class="mb-4">
            <InputText placeholder="Zip code" id="zipcode" autocomplete="off" @bind-Value="User.ZipCode" class="form-control" />
            <ValidationMessage For="() => User.ZipCode" class="text-danger" />
        </div>
        <div class="mb-4">
            <InputText placeholder="Password" type="password" autocomplete="new-password" id="profilepictureurl" @bind-Value="User.Password" class="form-control" />
            <ValidationMessage For="() => User.Password" class="text-danger" />
        </div>
    </fieldset>
    <div class="d-flex my-5">
        <input class="btn btn-secondary flex-grow-1 me-2" type="reset" value="Reset" @onclick="@ResetAndActivateForm" />
        <button class="btn btn-primary flex-grow-1 me-2" type="submit" value="Submit">Signup</button>
    </div>
</EditForm>



@code {
    [SupplyParameterFromForm]
    public UserSignupDTO User { get; set; } = new();

    private bool _isSendingApiRequest;

    private async Task OnValidSubmit()
    {
        _isSendingApiRequest = true;
        try
        {
            // Adds a random profilepicture url as a placeholder
            Uri.TryCreate("https://avatar.iran.liara.run/public", new UriKind(), out Uri? result);
            User.ProfilePictureURL = result;

            await Client.SignupAsync(User);
            SnackbarService.Success($"Welcome to the Cirkla community {User.FirstName} {User.LastName}!");
        }
        catch(Exception ex)
        {
            SnackbarService.Error("Sorry, couldn't register you at this time. Try again soon!");
        }
        finally
        {
            ResetAndActivateForm();
        }
    }

    private void ResetAndActivateForm()
    {
        User = new();
        _isSendingApiRequest = false;
    }
}
