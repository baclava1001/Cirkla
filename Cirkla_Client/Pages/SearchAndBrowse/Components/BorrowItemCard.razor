@inject NavigationManager NavigationManager;

<MudCard Elevation="2">
    <MudCarousel ItemsSource="Item?.Pictures" Style="height: 200px" ShowBullets="false" ShowArrows="_showArrows" EnableSwipeGesture="true" AutoCycle="false">
        <ItemTemplate>
            <MudCardMedia Height="200" Image="@context.Url" alt="@AltText()"/>
        </ItemTemplate>
    </MudCarousel>
    <MudCardContent>
        <MudText Typo="Typo.h5" Class="text-truncate">@Item?.Name</MudText>
        <MudText Typo="Typo.body2" Class="text-truncate">@Item?.Description</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudSpacer/>
        <MudButton @onclick="NavigateToItem" Variant="Variant.Text" Color="Color.Info">
            More...
        </MudButton>
        @if (Item?.Status != ItemStatus.Available)
        {
            <MudIcon Icon="@Icons.Material.Filled.Block" Color="Color.Error" Size="Size.Large"/>
        }
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public Item? Item { get; set; }
    private bool _showArrows;

    protected override async Task OnInitializedAsync()
    {
        _showArrows = Item.Pictures.Count > 1;
    }

    private void NavigateToItem()
    {
        var url = $"/items/{Item?.Id}/borrowing-contract/create";
        NavigationManager.NavigateTo(url);
    }

    private string? AltText()
    {
        return $"Picture of {Item?.Name}";
    }
}
