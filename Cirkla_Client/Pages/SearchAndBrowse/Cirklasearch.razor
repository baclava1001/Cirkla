@page "/cirkla"
@inject IClient _client;

<PageTitle>Cirkla</PageTitle>
<h3>Cirkla</h3>
<hr />
@if (message is not null)
{
    <p class="text-danger">@message</p>
}
<div class="container">
    <div class="row">
        @if (!AllItems.Any())
        {
            <p>Loading items...</p>
        }
        else
        {
            foreach (var item in AllItems)
            {
                <div class="col-12 col-sm-6 col-md-3 mb-4">
                    <div class="card h-100 shadow-sm">
                        <img class="card-img-top" style="height:200px;" src="@item.Pictures?.FirstOrDefault()?.Url" alt="Picture of @item.Name" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text">@item.Description</p>
                            <a href="/borrowitem/?id=@item.Id" class="card-link mt-auto">More...</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>




@code {
    // TODO: Add pagination serverside & clientside
    // TODO: Fix image height in cards

    [Parameter]
    public List<Item> AllItems { get; set; } = new();

    private string? message;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var response = await _client.ApiItemAllAsync();
            AllItems = response.ToList();
            if (AllItems is null)
            {
                message = "No objects to load at this time";
            }
        }
        catch (Exception ex)
        {
            message = ex.Message;
        }
    }
}
